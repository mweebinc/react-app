---
description: Innque API schema organization with field definition types (String, Number, Boolean, Date, Array, Pointer, Relation, ACL).
globs:
alwaysApply: false
---

# Schema Structure and Definition

## Core Principles

- **Dynamic Properties**: Backend provides dynamic properties by default for all schemas
- **Frontend Extensions**: UI-specific properties can be added for dynamic form generation
- **Runtime Flexibility**: Schema changes take effect without code deployment

## Naming Conventions

- **Schema Collections**: Use `snake_case` and prefer single words when possible
- **Schema Fields**: Use `snake_case` and prefer single words when possible
- **JavaScript Code**: Use `camelCase` for variables, functions, and objects

## Schema Architecture

### Backend Schema (Default)

Backend automatically provides dynamic properties for all schemas:

```json
{
  "collection": "my_collection",
  "fields": {
    "id": { "type": "String", "default": "${crypto.uuid}", "once": true },
    "created": { "type": "Date", "default": "${date.iso}", "once": true },
    "updated": { "type": "Date", "value": "${date.iso}" },
    "acl": { "type": "ACL", "default": { "read": ["*"], "write": ["*"] } }
  },
  "permissions": {
    "create": ["*"], "find": ["*"], "update": ["*"], "delete": ["role:admin"]
  }
}
```

### Frontend Extended Schema (UI Generation)

Frontend can extend schemas with UI-specific properties:

```json
{
  "collection": "my_collection",
  "fields": {
    "field_name": {
      "type": "String",
      "label": "Field Label",
      "required": true,
      "placeholder": "Enter value",
      "tab": "general",
      "section": "basic",
      "col": "w-full md:w-1/2"
    }
  },
  "tabs": { "general": { "label": "General Information" } },
  "sections": { "basic": { "label": "Basic Information" } }
}
```

## Data Types and Properties

### Supported Data Types

- `String`, `Number`, `Boolean`, `Date`, `Array`, `Pointer`, `Relation`, `ACL`

### Field Properties

**Backend Properties**: `type`, `target` (for Pointers), `required`, `unique`, `default`, `value`, `once`

**Frontend Extensions**: `label`, `placeholder`, `format`, `enum`, `tab`, `section`, `col`

### Permission Conventions

- `role:{name}` - Users with specific role
- `{userID}` - Specific user by ID
- `"*"` - All authenticated users
- `[]` - Master key access only
- `` (empty string) - Public access

## Dynamic Placeholders

### System Values
- `${crypto.uuid}` - Generate UUID v4
- `${crypto.randomHex}` - Generate random hexadecimal string

### Date/Time
- `${date.iso}` - ISO 8601 format
- `${date.year}`, `${date.month}`, `${date.day}` - Date components
- `${date.hours}`, `${date.minutes}`, `${date.seconds}` - Time components
- `${date.local}`, `${date.timestamp}`, `${date.utc}` - Various formats

### User Context
- `${user.id}`, `${user.name}`, `${user.email}` - Current user
- `${object.id}`, `${object.field_name}` - Current object context


